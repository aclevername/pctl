name: Release

on:
  push:
    tags: [ 'v*' ]

env:
  IMAGE: pctl
  ORG: weaveworks

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: weaveworkspctlci
          password: ${{ secrets.DOCKERHUB_PASSWORD_WEAVEWORKSPCTLCI }}
      - name: Prepare
        id: prep
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
          fi
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=VERSION::${VERSION}
      - name: Publish multi-arch container image
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: |
            docker.io/${{ env.ORG }}/${{ env.IMAGE }}:${{ steps.prep.outputs.VERSION }}
            docker.io/${{ env.ORG }}/${{ env.IMAGE }}:latest
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}
      - name: Check images
        run: |
          docker buildx imagetools inspect docker.io/${{ env.ORG }}/${{ env.IMAGE }}:${{ steps.prep.outputs.VERSION }}
          docker pull docker.io/${{ env.ORG }}/${{ env.IMAGE }}:${{ steps.prep.outputs.VERSION }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release --release-notes=docs/release_notes/${{ steps.prep.outputs.VERSION }}.md --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get release doc content
        id: vars
        run: echo ::set-output name=release_notes::$(cat docs/release_notes/${{ steps.prep.outputs.VERSION }}.md)
      - name: Notify slack of new release
        env:
          SLACK_BOT_TOKEN: ${{ secrets.WEAVEWORKS_SLACK_PROFILESBOT_TOKEN }}
        uses: pullreminders/slack-action@a5a262c896a1cc80dcbae59ba95513e2dfb21439
        with:
          args: |
            {
              "channel": "C01M9BYDE5U",
              "message": ":sparkles: A new release has been created for pctl! :sparkles:\n\n${{ steps.vars.outputs.release_notes }}"
            }
